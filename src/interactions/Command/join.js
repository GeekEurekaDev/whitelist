const { CommandInteraction, Client, MessageActionRow, MessageButton } = require('discord.js');
const { SlashCommandBuilder } = require('discord.js');
const Discord = require('discord.js');
const axios = require('axios');
const moment = require('moment-timezone');

const userStats = require('../../database/models/userStats');
const code = require('../../database/models/code');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('join')
        .setDescription('Reedem a generated code.')
        .addStringOption(option => option.setName('code').setDescription('Enter a valid code').setRequired(true)),
    /** 
     * @param {Client} client
     * @param {CommandInteraction} interaction
     * @param {String[]} args
     */

    run: async (client, interaction, args) => {
        await interaction.deferReply({ fetchReply: true });
    
        const levels = ['1229133603217211544', '1229133625187111013', '1229133624348115014', '1229133652756004987', '1229133668706943006']
        const level1RoleId = '1229133603217211544'; // Replace with your actual Level 1 role ID

        const hasLevelRole = levels.some(level => interaction.member.roles.cache.has(level));
        if (hasLevelRole) {
            return interaction.editReply({ content: 'This command can only be used by new users.', ephemeral: true });
        }

        if (interaction.channel.id !== '1193117184306708554') {
            return interaction.editReply({ content: 'This command can only be used in the specific channel.', ephemeral: true });
        }

        const codeInput = interaction.options.getString('code');
        const member = interaction.guild.members.cache.get(interaction.user.id);
    
        // Fetch the code from the database
        const codeDoc = await code.findOne({ Code: codeInput });
        const generatedByUser = await client.users.fetch(codeDoc.GeneratedBy);

        if (!codeDoc) {
            const embed = new Discord.EmbedBuilder()
                .setColor('#0099ff')
                .setDescription('The code you entered does not exist.');
            return interaction.followUp({ embeds: [embed] });
        }
    
        // Check if the code has already been redeemed
        if (codeDoc.Redeemed) {
            const embed = new Discord.EmbedBuilder()
                .setColor('#0099ff')
                .setDescription('The code you entered has already been redeemed.')
                .setFooter({ text: `Generated by: @${generatedByUser.username}` });
            return interaction.followUp({ embeds: [embed] });
        }
    
        // Check if the user trying to redeem the code is the one who generated it
        if (codeDoc.GeneratedBy === member.id) {
            const embed = new Discord.EmbedBuilder()
                .setColor('#0099ff')
                .setDescription('You cannot redeem a code that you generated.');
            return interaction.followUp({ embeds: [embed] });
        }

        if (codeDoc.Admin && codeDoc.RedeemCount >= codeDoc.Limit) {
            const embed = new Discord.EmbedBuilder()
                .setColor('#0099ff')
                .setDescription('The code you entered has already been redeemed.')
                .setFooter({ text: `Generated by: @${generatedByUser.username}` });
            return interaction.followUp({ embeds: [embed] });
        }

        // 
        // Mark the code as redeemed and save the user who redeemed it
        if(codeDoc.Admin) {
            codeDoc.RedeemCount += 1;
            codeDoc.ReedemedAt = new Date();
            codeDoc.Redeems.push(member.id); // Add the user to the Redeems array
            await codeDoc.save();
        } else if(!codeDoc.Admin) {
        codeDoc.Redeemed = true;
        codeDoc.ReedemedBy = member.id;
        codeDoc.ReedemedAt = new Date();
        await codeDoc.save();
        }

        await member.roles.add(level1RoleId);

        if (codeDoc.Notify && codeDoc.GeneratedBy) {
            const user = await client.users.fetch(codeDoc.GeneratedBy);
            const embed = new Discord.EmbedBuilder()
                .setColor('#0099ff')
                .setDescription(`Your code ${codeInput} has been redeemed by ${member.user.tag}.`);
            user.send({ embeds: [embed] });
        }
        
        const embed = new Discord.EmbedBuilder()
            .setColor('#0099ff')
            .setDescription(`You have successfully redeemed the code: \`${codeInput}\``)
            .setFooter({ text: `Generated by: @${generatedByUser.username}` });
        await interaction.followUp({ embeds: [embed] });

    },
};